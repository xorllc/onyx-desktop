FROM ubuntu:18.04

# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies

RUN \
        export http_proxy=$proxy \
    &&  export https_proxy=$http_proxy \
    &&  apt-get update -y \
    &&  apt-get upgrade -y \
    &&  apt-get install -y \
        software-properties-common \
        python3-software-properties

RUN \
        export http_proxy=$proxy \
    &&  export https_proxy=$http_proxy \
    &&  add-apt-repository universe \
    &&  add-apt-repository multiverse \
    &&  dpkg --configure -a \
    &&  apt-get update -y \
    &&  apt-get upgrade -y \
    &&  apt-get install -y \
        openssh-client \
        openssh-server \
        cups \
        libgconf2-4 \
        iputils-ping \
        libxss1 \
        xdg-utils \
        libpango1.0-0 \
        fonts-liberation \
        flashplugin-installer \
        zsh \
        sudo \
        higan \
        fceux \
        curl \
        wget \
        xdg-utils \
        libpango1.0-0 \
        fonts-liberation \
        vim \
        tmux \
        supervisor \
        i3 \
        docker.io \
        libxft-dev \
        terminator \
        man \
        git \
        clang \
        scons \
        libsdl2-dev \
        libsdl2-image-dev \
        libsdl2-ttf-dev \
        libsdl1.2-dev \
        libboost-all-dev \
        alsa-base \
        alsa-utils \
        pulseaudio \
        dbus-x11 \
    && apt-get clean -y \
    && apt-get autoclean -y \
    && apt-get auto-remove -y 

ARG version
ARG proxy
ARG email
ARG username
ARG password

LABEL Name="$username" Version="$version" \
      Maintainer="$email"

ENV DEBIAN_FRONTEND=noninteractive

# SSH.
EXPOSE 22

# Copy the files into the right places.
COPY cbin/ /cbin/

# Setup Developer Environment
RUN \
       addgroup dev \
    && echo '%dev ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers \
    && useradd -m -s /usr/local/bin/xonsh -g dev devusr \
    && echo "devusr:$password" | /usr/sbin/chpasswd \
    && apt-get install python3-pip -y
RUN \
       pip3 install \
        flask \
        connexion \
        xonsh \
    && chmod -R +x /cbin

WORKDIR /home/devusr
RUN \
       mkdir /data \
    && chmod 777 /data \
    && ln -s /data /home/devusr/work \
    && cd /home/devusr \
    && mkdir .ssh \
    && chown devusr.dev .ssh \
    && chmod 700 .ssh \
    && chown -R devusr.dev /home/devusr

COPY etc/motd /etc/motd
COPY etc/supervisor /etc/supervisor
COPY devusr /home/devusr/
COPY readmes /home/devusr/readmes
USER root
RUN \
       chown -R devusr /home/devusr \
    && chmod o+w /home/devusr \
    && ln -fsv $(which vim) $(which vi) \
    && sed -i s%SED_PROXY%$proxy% /home/devusr/.xonshrc \
    && sed -i s%SED_NAME%$username% /home/devusr/.gitconfig \
    && sed -i s%SED_EMAIL%$email% /home/devusr/.gitconfig \
    && sed -i s%SED_EMAIL%$email% /home/devusr/.xonshrc

# Force user back to root so s6 can run initd processes
ENTRYPOINT ["/init", "/cbin/exec-cmd"]

# Font related.
COPY inconsolata-g.ttf /tmp/onyx/custom_fonts/inconsolata-g.ttf
RUN ln -s /tmp/onyx /usr/share/fonts/fontfiles \
    && fc-cache -fv

## Suckless terminal. libxft-dev was already installed above.
#COPY st /tmp/suckless/st
#RUN cd /tmp/suckless/st/st-patched && make install

# i3 related.
COPY i3config /home/user/.config/i3/config 

# NES emulator related.
COPY bjne-codebase.tar /opt/bjne-codebase.tar
COPY laines-codebase.tar /opt/laines-codebase.tar
RUN mkdir -p /opt/nes \
    && cd /opt/nes \
    && mv /opt/laines-codebase.tar /opt/nes/laines-codebase.tar \
    && tar -xvf laines-codebase.tar \
    && cd /opt/nes/LaiNES-codebase \
    && scons \
    && cd /opt/nes \
    && mv /opt/bjne-codebase.tar /opt/nes/bjne-codebase.tar \
    && tar -xvf bjne-codebase.tar \
    && cd /opt/nes/bjne-codebase \
    && scons

COPY entrypoint.sh /usr/bin/entrypoint.sh
RUN mkdir -p /run/sshd
ENTRYPOINT ["/usr/bin/entrypoint.sh"]
ENTRYPOINT ["supervisord"]
